// Code generated by protoc-gen-go. DO NOT EDIT.
// source: webpush/protobuf/push.proto

package webpush_protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Subscription *PushSubscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	Plaintext    string            `protobuf:"bytes,2,opt,name=plaintext,proto3" json:"plaintext,omitempty"`
	// Represents a `TTL` header described in rfc8030#section-5.2.
	Ttl                  uint32   `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_push_fa1bef741b64bc9c, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetSubscription() *PushSubscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *Message) GetPlaintext() string {
	if m != nil {
		return m.Plaintext
	}
	return ""
}

func (m *Message) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func init() {
	proto.RegisterType((*Message)(nil), "webpush.protobuf.Message")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PushServiceClient is the client API for PushService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushServiceClient interface {
	Send(ctx context.Context, in *Message, opts ...grpc.CallOption) (*empty.Empty, error)
}

type pushServiceClient struct {
	cc *grpc.ClientConn
}

func NewPushServiceClient(cc *grpc.ClientConn) PushServiceClient {
	return &pushServiceClient{cc}
}

func (c *pushServiceClient) Send(ctx context.Context, in *Message, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/webpush.protobuf.PushService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushServiceServer is the server API for PushService service.
type PushServiceServer interface {
	Send(context.Context, *Message) (*empty.Empty, error)
}

func RegisterPushServiceServer(s *grpc.Server, srv PushServiceServer) {
	s.RegisterService(&_PushService_serviceDesc, srv)
}

func _PushService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webpush.protobuf.PushService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Send(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "webpush.protobuf.PushService",
	HandlerType: (*PushServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _PushService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "webpush/protobuf/push.proto",
}

func init() { proto.RegisterFile("webpush/protobuf/push.proto", fileDescriptor_push_fa1bef741b64bc9c) }

var fileDescriptor_push_fa1bef741b64bc9c = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x4f, 0x4d, 0x2a,
	0x28, 0x2d, 0xce, 0xd0, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x07, 0xf1, 0xf4,
	0xc0, 0x3c, 0x21, 0x01, 0xa8, 0xa4, 0x1e, 0x4c, 0x52, 0x4a, 0x3a, 0x3d, 0x3f, 0x3f, 0x3d, 0x27,
	0x15, 0xa1, 0x3a, 0x35, 0xb7, 0xa0, 0xa4, 0x12, 0x22, 0x2f, 0xa5, 0x81, 0xd5, 0xac, 0xf8, 0xe2,
	0xd2, 0xa4, 0xe2, 0xe4, 0xa2, 0xcc, 0x82, 0x92, 0xcc, 0xfc, 0x3c, 0x88, 0x4a, 0xa5, 0x46, 0x46,
	0x2e, 0x76, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0x21, 0x37, 0x2e, 0x1e, 0x64, 0x15, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x4a, 0x7a, 0xe8, 0x76, 0xeb, 0x05, 0x94, 0x16, 0x67, 0x04,
	0x23, 0xa9, 0x0c, 0x42, 0xd1, 0x27, 0x24, 0xc3, 0xc5, 0x59, 0x90, 0x93, 0x98, 0x99, 0x57, 0x92,
	0x5a, 0x51, 0x22, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x19, 0x84, 0x10, 0x10, 0x12, 0xe0, 0x62, 0x2e,
	0x29, 0xc9, 0x91, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x0d, 0x02, 0x31, 0x8d, 0x3c, 0xb8, 0xb8, 0xc1,
	0x26, 0xa6, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0x59, 0x72, 0xb1, 0x04, 0xa7, 0xe6, 0xa5, 0x08,
	0x49, 0x62, 0x5a, 0x0c, 0x75, 0xa9, 0x94, 0x98, 0x1e, 0xc4, 0xf7, 0x08, 0x19, 0x57, 0x90, 0xef,
	0x9d, 0xd4, 0xb8, 0x54, 0x92, 0xf3, 0x73, 0xf5, 0xd2, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0xf2,
	0xf2, 0xb3, 0x13, 0x73, 0xf3, 0x4b, 0xf2, 0x31, 0xcc, 0x49, 0x62, 0x03, 0xb3, 0x8c, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x0a, 0xf7, 0xa7, 0x2b, 0x74, 0x01, 0x00, 0x00,
}
